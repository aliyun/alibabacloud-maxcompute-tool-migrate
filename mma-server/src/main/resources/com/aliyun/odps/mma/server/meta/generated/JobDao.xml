<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 1999-2021 Alibaba Group Holding Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aliyun.odps.mma.server.meta.generated.JobDao">
  <resultMap id="BaseResultMap" type="com.aliyun.odps.mma.server.meta.generated.JobRecord">
    <id column="JOB_ID" jdbcType="VARCHAR" property="jobId" />
    <result column="JOB_PRIORITY" jdbcType="INTEGER" property="jobPriority" />
    <result column="JOB_STATUS" jdbcType="VARCHAR" property="jobStatus" />
    <result column="JOB_CONFIG" jdbcType="VARCHAR" property="jobConfig" />
    <result column="ATTEMPT_TIMES" jdbcType="INTEGER" property="attemptTimes" />
    <result column="MAX_ATTEMPT_TIMES" jdbcType="INTEGER" property="maxAttemptTimes" />
    <result column="C_TIME" jdbcType="BIGINT" property="cTime" />
    <result column="M_TIME" jdbcType="BIGINT" property="mTime" />
    <result column="S_TIME" jdbcType="BIGINT" property="sTime" />
    <result column="E_TIME" jdbcType="BIGINT" property="eTime" />
    <result column="HAS_SUB_JOB" jdbcType="BOOLEAN" property="hasSubJob" />
    <result column="JOB_INFO" jdbcType="VARCHAR" property="jobInfo" />
  </resultMap>

  <sql id="Base_Column_List">
    JOB_ID, JOB_PRIORITY, JOB_STATUS, JOB_CONFIG, ATTEMPT_TIMES, MAX_ATTEMPT_TIMES, C_TIME, M_TIME, S_TIME, E_TIME, HAS_SUB_JOB, JOB_INFO
  </sql>

  <select id="selectJobById" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM MMA.JOB
    WHERE JOB_ID = #{jobId,jdbcType=VARCHAR}
  </select>

  <select id="selectSubJobById" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM MMA.`${parentJobId}`
    WHERE JOB_ID = #{subJobId,jdbcType=VARCHAR}
  </select>

  <select id="selectJobs" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM MMA.JOB
    ORDER BY C_TIME DESC
  </select>

  <select id="selectSubJobs" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM MMA.`${parentJobId}`
    ORDER BY C_TIME DESC
  </select>

  <select id="selectJobsByJobStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from MMA.JOB
    where JOB_STATUS = #{jobStatus,jdbcType=VARCHAR}
    ORDER BY C_TIME DESC
  </select>

  <select id="selectSubJobsByJobStatus" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from MMA.`${parentJobId}`
    where JOB_STATUS = #{jobStatus,jdbcType=VARCHAR}
    ORDER BY C_TIME DESC
  </select>

  <delete id="deleteJobById" parameterType="java.lang.String">
    DELETE FROM MMA.JOB
    WHERE JOB_ID = #{jobId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteSubJobById">
    DELETE FROM MMA.`${parentJobId}`
    WHERE JOB_ID = #{subJobId}
  </delete>

  <insert
    id="insertSubJob"
    flushCache="true">
    INSERT INTO MMA.`${parentJobId}` (
      JOB_ID,
      JOB_PRIORITY,
      JOB_STATUS,
      JOB_CONFIG,
      ATTEMPT_TIMES,
      MAX_ATTEMPT_TIMES,
      C_TIME,
      M_TIME,
      S_TIME,
      E_TIME,
      HAS_SUB_JOB,
      JOB_INFO
    )
    VALUES (
      #{record.jobId, jdbcType=VARCHAR},
      #{record.jobPriority, jdbcType=INTEGER},
      #{record.jobStatus,jdbcType=VARCHAR},
      #{record.jobConfig,jdbcType=VARCHAR},
      #{record.attemptTimes,jdbcType=INTEGER},
      #{record.maxAttemptTimes,jdbcType=INTEGER},
      #{record.cTime,jdbcType=BIGINT},
      #{record.mTime,jdbcType=BIGINT},
      #{record.sTime,jdbcType=BIGINT},
      #{record.eTime,jdbcType=BIGINT},
      #{record.hasSubJob,jdbcType=BOOLEAN},
      #{record.jobInfo,jdbcType=VARCHAR}
    )
  </insert>

  <insert
    id="insertJob"
    keyColumn="JOB_ID"
    keyProperty="jobId"
    parameterType="com.aliyun.odps.mma.server.meta.generated.JobRecord"
    useGeneratedKeys="true"
    flushCache="true">
    INSERT INTO MMA.JOB (
      JOB_ID,
      JOB_PRIORITY,
      JOB_STATUS,
      JOB_CONFIG,
      ATTEMPT_TIMES,
      MAX_ATTEMPT_TIMES,
      C_TIME,
      M_TIME,
      S_TIME,
      E_TIME,
      HAS_SUB_JOB,
      JOB_INFO
    )
    VALUES (
      #{jobId, jdbcType=VARCHAR},
      #{jobPriority, jdbcType=INTEGER},
      #{jobStatus,jdbcType=VARCHAR},
      #{jobConfig,jdbcType=VARCHAR},
      #{attemptTimes,jdbcType=INTEGER},
      #{maxAttemptTimes,jdbcType=INTEGER},
      #{cTime,jdbcType=BIGINT},
      #{mTime,jdbcType=BIGINT},
      #{sTime,jdbcType=BIGINT},
      #{eTime,jdbcType=BIGINT},
      #{hasSubJob,jdbcType=BOOLEAN},
      #{jobInfo, jdbcType=VARCHAR}
    )
  </insert>

  <!--<insert id="insertSelective" keyColumn="JOB_ID" keyProperty="jobId" parameterType="com.aliyun.odps.datacarrier.taskscheduler.meta.generated.Job" useGeneratedKeys="true">-->
    <!--insert into MMA.JOB-->
    <!--<trim prefix="(" suffix=")" suffixOverrides=",">-->
      <!--<if test="jobStatus != null">-->
        <!--JOB_STATUS,-->
      <!--</if>-->
      <!--<if test="jobConfig != null">-->
        <!--JOB_CONFIG,-->
      <!--</if>-->
      <!--<if test="attemptTimes != null">-->
        <!--ATTEMPT_TIMES,-->
      <!--</if>-->
      <!--<if test="cTime != null">-->
        <!--C_TIME,-->
      <!--</if>-->
      <!--<if test="mTime != null">-->
        <!--M_TIME,-->
      <!--</if>-->
      <!--<if test="sTime != null">-->
        <!--S_TIME,-->
      <!--</if>-->
      <!--<if test="eTime != null">-->
        <!--E_TIME,-->
      <!--</if>-->
      <!--<if test="hasSubJob != null">-->
        <!--HAS_SUB_JOB,-->
      <!--</if>-->
    <!--</trim>-->
    <!--<trim prefix="values (" suffix=")" suffixOverrides=",">-->
      <!--<if test="jobStatus != null">-->
        <!--#{jobStatus,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="jobConfig != null">-->
        <!--#{jobConfig,jdbcType=VARCHAR},-->
      <!--</if>-->
      <!--<if test="attemptTimes != null">-->
        <!--#{attemptTimes,jdbcType=INTEGER},-->
      <!--</if>-->
      <!--<if test="cTime != null">-->
        <!--#{cTime,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="mTime != null">-->
        <!--#{mTime,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="sTime != null">-->
        <!--#{sTime,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="eTime != null">-->
        <!--#{eTime,jdbcType=BIGINT},-->
      <!--</if>-->
      <!--<if test="hasSubJob != null">-->
        <!--#{hasSubJob,jdbcType=BOOLEAN},-->
      <!--</if>-->
    <!--</trim>-->
  <!--</insert>-->

  <update id="updateJobByPrimaryKeySelective" parameterType="com.aliyun.odps.mma.server.meta.generated.JobRecord">
    update MMA.JOB
    <set>
      <if test="jobPriority != null">
        JOB_PRIORITY = #{jobPriority,jdbcType=INTEGER},
      </if>
      <if test="jobStatus != null">
        JOB_STATUS = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="jobConfig != null">
        JOB_CONFIG = #{jobConfig,jdbcType=VARCHAR},
      </if>
      <if test="attemptTimes != null">
        ATTEMPT_TIMES = #{attemptTimes,jdbcType=INTEGER},
      </if>
      <if test="maxAttemptTimes != null">
        MAX_ATTEMPT_TIMES = #{maxAttemptTimes,jdbcType=INTEGER},
      </if>
      <if test="cTime != null">
        C_TIME = #{cTime,jdbcType=BIGINT},
      </if>
      <if test="mTime != null">
        M_TIME = #{mTime,jdbcType=BIGINT},
      </if>
      <if test="sTime != null">
        S_TIME = #{sTime,jdbcType=BIGINT},
      </if>
      <if test="eTime != null">
        E_TIME = #{eTime,jdbcType=BIGINT},
      </if>
      <if test="hasSubJob != null">
        HAS_SUB_JOB = #{hasSubJob,jdbcType=BOOLEAN},
      </if>
      <if test="jobInfo != null">
        JOB_INFO = #{jobInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </update>

  <update id="updateJobById" parameterType="com.aliyun.odps.mma.server.meta.generated.JobRecord">
    update MMA.JOB
    set JOB_PRIORITY = #{jobPriority,jdbcType=INTEGER},
      JOB_STATUS = #{jobStatus,jdbcType=VARCHAR},
      JOB_CONFIG = #{jobConfig,jdbcType=VARCHAR},
      ATTEMPT_TIMES = #{attemptTimes,jdbcType=INTEGER},
      MAX_ATTEMPT_TIMES = #{maxAttemptTimes,jdbcType=INTEGER},
      C_TIME = #{cTime,jdbcType=BIGINT},
      M_TIME = #{mTime,jdbcType=BIGINT},
      S_TIME = #{sTime,jdbcType=BIGINT},
      E_TIME = #{eTime,jdbcType=BIGINT},
      HAS_SUB_JOB = #{hasSubJob,jdbcType=BOOLEAN},
      JOB_INFO = #{jobInfo,jdbcType=VARCHAR}
    where JOB_ID = #{jobId,jdbcType=VARCHAR}
  </update>

  <update id="updateSubJobById">
    update MMA.`${parentJobId}`
    set JOB_PRIORITY = #{record.jobPriority,jdbcType=INTEGER},
      JOB_STATUS = #{record.jobStatus,jdbcType=VARCHAR},
      JOB_CONFIG = #{record.jobConfig,jdbcType=VARCHAR},
      ATTEMPT_TIMES = #{record.attemptTimes,jdbcType=INTEGER},
      MAX_ATTEMPT_TIMES = #{record.maxAttemptTimes,jdbcType=INTEGER},
      C_TIME = #{record.cTime,jdbcType=BIGINT},
      M_TIME = #{record.mTime,jdbcType=BIGINT},
      S_TIME = #{record.sTime,jdbcType=BIGINT},
      E_TIME = #{record.eTime,jdbcType=BIGINT},
      HAS_SUB_JOB = #{record.hasSubJob,jdbcType=BOOLEAN},
      JOB_INFO = #{record.jobInfo,jdbcType=VARCHAR}
    where JOB_ID = #{record.jobId,jdbcType=VARCHAR}
  </update>

  <update id="createMmaSchemaIfNotExists">
    CREATE SCHEMA IF NOT EXISTS MMA
  </update>

  <update id="createJobTableIfNotExists">
    CREATE TABLE IF NOT EXISTS MMA.JOB (
      `JOB_ID` VARCHAR(255),
      `JOB_PRIORITY` INT,
      `JOB_STATUS` VARCHAR(16),
      `JOB_CONFIG` TEXT,
      `ATTEMPT_TIMES` INT,
      `MAX_ATTEMPT_TIMES` INT,
      `C_TIME` BIGINT,
      `M_TIME` BIGINT,
      `S_TIME` BIGINT,
      `E_TIME` BIGINT,
      `HAS_SUB_JOB` BOOLEAN,
      `JOB_INFO` TEXT,
      PRIMARY KEY (JOB_ID)
    )
  </update>

  <update id="createSubJobTableIfNotExists" parameterType="java.lang.String">
    CREATE TABLE IF NOT EXISTS MMA.`${parentJobId}` (
      `JOB_ID` VARCHAR(255),
      `JOB_PRIORITY` INT,
      `JOB_STATUS` VARCHAR(16),
      `JOB_CONFIG` TEXT,
      `ATTEMPT_TIMES` INT,
      `MAX_ATTEMPT_TIMES` INT,
      `C_TIME` BIGINT,
      `M_TIME` BIGINT,
      `S_TIME` BIGINT,
      `E_TIME` BIGINT,
      `HAS_SUB_JOB` VARCHAR(255),
      `JOB_INFO` TEXT,
      PRIMARY KEY (JOB_ID)
    )
  </update>

  <update id="dropSubJobTable" parameterType="java.lang.String">
    DROP TABLE IF EXISTS MMA.`${parentJobId}`
  </update>
</mapper>